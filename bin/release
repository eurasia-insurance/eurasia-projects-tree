#!/bin/bash

module=$(basename $(pwd))
script_dir=$(cd "$(dirname "$0")"; pwd -P)

test -f .release-skip && { echo "$module: Skipping"; exit 0; }
test -f pom.xml -o -f version || { echo "$module: Should be Maven or Generic project. Skipped."; exit 0; }
test -e .git || { echo "$module: Should be GIT root. Skipped."; exit 0; }
test -z `git status -s` || { git status; echo "$module: Uncommited changes. Terminate"; exit 1; }

rel_ver="$1"
test -z "$rel_ver" && { echo "$module: Usage $(basename $0) RELEASE_VERSION"; exit 1; }
rel_branch=release/$rel_ver
rel_tag=v$rel_ver

cur_branch=$(git rev-parse --abbrev-ref HEAD)

test -f version && . $script_dir/generic_api || . $script_dir/maven_api

echo "$module: Release via $release_api_name"

echo "$module: BEGIN" && \
	\
	git checkout -b $rel_branch && \
	\
# do release
	before_release && \
	do_release && \
	after_release && \
	\
# merge release branch to current (master?)
	git checkout $cur_branch && \
	git merge --no-ff --no-edit $rel_branch && \
	git push origin $cur_branch && \
	\
# tagging LATEST
	git tag -f LATEST $rel_tag && \
	git push -f origin LATEST && \
	\
# cleanup release branch
	git branch -d $rel_branch && \
	git push --delete origin $rel_branch && \
	\
	git checkout LATEST && \
	\
	echo "$module: DONE"
